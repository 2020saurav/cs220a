//
// Generated by Bluespec Compiler, version 2011.06.D (build 24470, 2011-06-30)
//
// On Tue Jan 21 15:52:05 IST 2014
//
// Method conflict info:
// (none)
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
`define BSV_ASSIGNMENT_DELAY
`endif

module mkFibOne(CLK,
		RST_N);
  input  CLK;
  input  RST_N;

  // ports of submodule next_fib_inst
  wire [31 : 0] next_fib_inst$D_IN, next_fib_inst$Q_OUT;
  wire next_fib_inst$EN;

  // ports of submodule this_fib_inst
  wire [31 : 0] this_fib_inst$D_IN, this_fib_inst$Q_OUT;
  wire this_fib_inst$EN;

  // rule scheduling signals
  wire CAN_FIRE_RL_fib, WILL_FIRE_RL_fib;

  // submodule next_fib_inst
  RegN #(.width(32'd32), .init(32'd1)) next_fib_inst(.CLK(CLK),
						     .RST_N(RST_N),
						     .D_IN(next_fib_inst$D_IN),
						     .EN(next_fib_inst$EN),
						     .Q_OUT(next_fib_inst$Q_OUT));

  // submodule this_fib_inst
  RegN #(.width(32'd32), .init(32'd0)) this_fib_inst(.CLK(CLK),
						     .RST_N(RST_N),
						     .D_IN(this_fib_inst$D_IN),
						     .EN(this_fib_inst$EN),
						     .Q_OUT(this_fib_inst$Q_OUT));

  // rule RL_fib
  assign CAN_FIRE_RL_fib = 1'd1 ;
  assign WILL_FIRE_RL_fib = 1'd1 ;

  // submodule next_fib_inst
  assign next_fib_inst$D_IN = this_fib_inst$Q_OUT + next_fib_inst$Q_OUT ;
  assign next_fib_inst$EN = 1'd1 ;

  // submodule this_fib_inst
  assign this_fib_inst$D_IN = next_fib_inst$Q_OUT ;
  assign this_fib_inst$EN = 1'd1 ;

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N) $display("%0d", $signed(this_fib_inst$Q_OUT));
    if (RST_N)
      if ((this_fib_inst$Q_OUT ^ 32'h80000000) > 32'h80002710) $finish(32'd0);
  end
  // synopsys translate_on
endmodule  // mkFibOne

